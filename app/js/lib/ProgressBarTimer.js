!function(){"use strict";function t(t,e){this.element=e,this.startTime=new Date(t.start).getTime(),this.finishTime=new Date(t.end).getTime(),this.className="",this.percent=null,this.timer=new App.Lib.Timer({start:t.start,end:t.end},this.timerCb.bind(this)),this.progressCalc(),this.showProgress()}t.prototype.start=function(){this.timer.start()},t.prototype.stop=function(){this.timer.stop()},t.prototype.timerCb=function(){this.progressCalc(),this.showProgress()},t.prototype.getClassName=function(){return this.className},t.prototype.getPercent=function(){return this.percent},t.prototype.update=function(t){this.startTime=new Date(t.start).getTime(),this.finishTime=new Date(t.end).getTime(),this.progressCalc(),this.showProgress()},t.prototype.showProgress=function(){"positive"==this.getClassName()?this.element.classList.remove("negative"):this.element.classList.remove("positive"),this.element.style.width=this.getPercent()+"%",this.element.classList.add(this.getClassName())},t.prototype.progressCalc=function(){var t=this.finishTime-this.startTime,e=Date.now()-this.startTime;this.percent=100*e/t,this.className=this.percent>=0&&this.percent<=100?"positive":"negative",this.percent=this.percent>=0&&this.percent<=100?this.percent:100},App.Lib.ProgressBarTimer=t}(App);